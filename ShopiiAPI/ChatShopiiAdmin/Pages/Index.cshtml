@page
@model IndexModel
@{
    ViewData["Title"] = "Live Chat - Admin Panel";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        :root {
            --primary: #007bff;
            --primary-light: #e6f2ff;
            --secondary: #f0f2f5;
            --border: #e4e6eb;
            --text: #1a1a1a;
            --text-muted: #65676B;
            --background: #ffffff;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Inter', sans-serif;
        }

        body {
            background-color: var(--secondary);
            color: var(--text);
        }

        .chat-container {
            display: flex;
            height: 100vh;
            overflow: hidden;
        }

        /* Sidebar Styles */
        .chat-sidebar {
            width: 300px;
            background-color: var(--background);
            border-right: 1px solid var(--border);
            display: flex;
            flex-direction: column;
        }

        .sidebar-header {
            padding: 16px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid var(--border);
        }

            .sidebar-header h2 {
                font-size: 1.2rem;
                font-weight: 600;
            }

        .sidebar-actions {
            display: flex;
            gap: 8px;
        }

        .icon-button {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            border: none;
            background-color: transparent;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            color: var(--text-muted);
        }

            .icon-button:hover {
                background-color: var(--secondary);
            }

        .search-container {
            padding: 8px 16px;
            position: relative;
        }

        .search-input {
            width: 100%;
            padding: 8px 12px 8px 36px;
            border-radius: 20px;
            border: none;
            background-color: var(--secondary);
            font-size: 0.9rem;
        }

        .search-icon {
            position: absolute;
            left: 28px;
            top: 18px;
            color: var(--text-muted);
        }

        .contacts-list {
            flex: 1;
            overflow-y: auto;
        }

        .contact-item {
            padding: 12px 16px;
            display: flex;
            align-items: center;
            gap: 12px;
            cursor: pointer;
            border-bottom: 1px solid var(--border);
        }

            .contact-item:hover, .contact-item.active {
                background-color: var(--secondary);
            }

        .avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            position: relative;
            background-color: var(--primary-light);
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            color: var(--primary);
        }

        .online-indicator {
            width: 12px;
            height: 12px;
            background-color: #42b72a;
            border-radius: 50%;
            border: 2px solid var(--background);
            position: absolute;
            bottom: 0;
            right: 0;
        }

        .contact-info {
            flex: 1;
            overflow: hidden;
        }

        .contact-name {
            font-weight: 500;
            margin-bottom: 3px;
        }

        .contact-last-message {
            font-size: 0.85rem;
            color: var(--text-muted);
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .contact-meta {
            display: flex;
            flex-direction: column;
            align-items: flex-end;
        }

        .contact-time {
            font-size: 0.75rem;
            color: var(--text-muted);
        }

        .unread-badge {
            background-color: var(--primary);
            color: white;
            border-radius: 50%;
            min-width: 20px;
            height: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.75rem;
            margin-top: 4px;
        }

        /* Chat Area Styles */
        .chat-main {
            flex: 1;
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        .chat-header {
            padding: 12px 16px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            border-bottom: 1px solid var(--border);
            background-color: var(--background);
        }

        .chat-header-info {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .chat-header-text h3 {
            font-size: 1rem;
            font-weight: 600;
        }

        .chat-header-text p {
            font-size: 0.8rem;
            color: var(--text-muted);
        }

        .chat-header-actions {
            display: flex;
            gap: 8px;
        }

        .messages-container {
            flex: 1;
            padding: 16px;
            overflow-y: auto;
            background-color: var(--secondary);
        }

        .message {
            max-width: 65%;
            margin-bottom: 16px;
            display: flex;
            flex-direction: column;
        }

            .message.user {
                margin-left: auto;
            }

        .message-content {
            padding: 10px 14px;
            border-radius: 18px;
            font-size: 0.95rem;
            position: relative;
        }

        .message.other .message-content {
            background-color: var(--background);
            border-top-left-radius: 4px;
        }

        .message.user .message-content {
            background-color: var(--primary);
            color: white;
            border-top-right-radius: 4px;
        }

        .message-meta {
            font-size: 0.75rem;
            color: var(--text-muted);
            margin-top: 2px;
            display: flex;
            align-items: center;
        }

        .message.user .message-meta {
            justify-content: flex-end;
        }

        .message-status {
            margin-left: 4px;
        }

        .chat-input-container {
            padding: 12px 16px;
            border-top: 1px solid var(--border);
            background-color: var(--background);
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .input-actions {
            display: flex;
            gap: 8px;
        }

        .message-input {
            flex: 1;
            padding: 10px 16px;
            border-radius: 24px;
            border: none;
            background-color: var(--secondary);
            font-size: 0.95rem;
            resize: none;
            max-height: 100px;
            min-height: 40px;
            outline: none;
        }

        .send-button {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            border: none;
            background-color: var(--primary);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
        }

            .send-button:hover {
                background-color: #0069d9;
            }

        .empty-state {
            flex: 1;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            color: var(--text-muted);
            background-color: var(--secondary);
        }

            .empty-state i {
                font-size: 48px;
                margin-bottom: 16px;
            }
    </style>
</head>
<body>
    <div class="chat-container">
        <!-- Sidebar -->
        <div class="chat-sidebar">
            <div class="sidebar-header">
                <h2>Tin nhắn</h2>
                <div class="sidebar-actions">
                    <button class="icon-button"><i class="bi bi-gear"></i></button>
                    <button class="icon-button"><i class="bi bi-pencil-square"></i></button>
                </div>
            </div>

            <div class="search-container">
                <i class="bi bi-search search-icon"></i>
                <input type="text" class="search-input" placeholder="Tìm kiếm" />
            </div>

            <div class="contacts-list">
                @foreach (var user in Model.ActiveUsers)
                {
                    var lastMessage = Model.Messages?.LastOrDefault(m => m.UserId == user);
                    <div class="contact-item @(user == Model.SelectedUserId ? "active" : "")"
                         onclick="location.href='?userId=@user'">
                        <div class="avatar">
                            @user[0] <!-- Hiển thị ký tự đầu của userId -->
                        </div>
                        <div class="contact-info">
                            <div class="contact-name">@user</div>
                            <div class="contact-last-message">
                                @(lastMessage?.Text ?? "Chưa có tin nhắn")
                            </div>
                        </div>
                        <div class="contact-meta">
                            <div class="contact-time">
                                @(lastMessage?.Timestamp ?? "")
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Main Chat Area -->
        <div class="chat-main">
            @if (!string.IsNullOrEmpty(Model.SelectedUserId))
            {
                <div class="chat-header">
                    <div class="chat-header-info">
                        <div class="avatar">
                            @Model.SelectedUserId[0] <!-- Hiển thị ký tự đầu của userId -->
                        </div>
                        <div class="chat-header-text">
                            <h3>@Model.SelectedUserId</h3>
                            <p>Đang hoạt động</p> <!-- Có thể thêm logic để kiểm tra trạng thái -->
                        </div>
                    </div>
                    <div class="chat-header-actions">
                        <button class="icon-button"><i class="bi bi-telephone"></i></button>
                        <button class="icon-button"><i class="bi bi-camera-video"></i></button>
                        <button class="icon-button"><i class="bi bi-info-circle"></i></button>
                    </div>
                </div>

                <div class="messages-container" id="messages-container">
                    @foreach (var message in Model.Messages.Where(m => m.UserId == Model.SelectedUserId))
                    {
                        <div class="message @(message.From == "admin" ? "user" : "other")">
                            <div class="message-content">
                                @message.Text
                            </div>
                            <div class="message-meta">
                                <span class="message-time">@message.Timestamp</span>
                                @if (message.From == "admin")
                                {
                                    <span class="message-status">
                                        @switch (message.Status)
                                        {
                                            case "read":
                                                <i class="bi bi-check-all"></i>
                                                break;
                                            case "delivered":
                                                <i class="bi bi-check-all"></i>
                                                break;
                                            default:
                                                <i class="bi bi-check"></i>
                                                break;
                                        }
                                    </span>
                                }
                            </div>
                        </div>
                    }
                </div>

                <form class="chat-input-container" id="chat-form" onsubmit="sendMessage(); return false;">
                    <input type="hidden" name="userId" value="@Model.SelectedUserId" id="userId" />
                    <div class="input-actions">
                        <button type="button" class="icon-button"><i class="bi bi-plus-lg"></i></button>
                    </div>
                    <textarea class="message-input" id="messageContent" placeholder="Nhập tin nhắn..." rows="1"
                              onkeydown="if(event.keyCode == 13 && !event.shiftKey) { event.preventDefault(); sendMessage(); }"></textarea>
                    <button type="button" class="send-button" onclick="sendMessage()"><i class="bi bi-send"></i></button>
                </form>
            }
            else
            {
                <div class="empty-state">
                    <i class="bi bi-chat-dots"></i>
                    <p>Chọn người liên hệ để bắt đầu trò chuyện</p>
                </div>
            }
        </div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.min.js"></script>
    <script src="~/js/chat.js"></script>
</body>
</html>
